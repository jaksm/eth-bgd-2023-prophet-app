import { type NextPage } from "next";
import Head from "next/head";
import { api } from "../utils/api";

import { Grid } from "../components/Grid";
import { Search } from "../components/Search";
import { AuctionCard } from "../components/cards/AuctionCard";
import { AuctionListCard } from "../components/cards/AuctionListCard";
import { useSearchAuctions } from "../hooks/useSearch";

import { AnimatePresence, motion } from "framer-motion";

const Home: NextPage = () => {
  const auctions = api.auctions.getAll.useQuery();

  const search = useSearchAuctions();

  return (
    <>
      <Head>
        <title>Prophet | Buy</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col justify-center">
        <div className="container mx-auto flex flex-col justify-center gap-12 px-4">
          <Search onChange={search.setValue} />

          <AnimatePresence>
            {search.results?.length > 0 && (
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                exit={{ opacity: 0 }}
                className="flex flex-col gap-12 pb-12"
              >
                <h2 className="text-3xl font-semibold tracking-wide text-white">
                  üîç Found {search.results.length} auctions
                </h2>

                <motion.div className="flex flex-col gap-4">
                  {(search.results || []).map((auction) => (
                    <motion.div key={auction.informationCID}>
                      <AuctionListCard
                        title={auction.information.title}
                        description={auction.information.description}
                        informationCID={auction.informationCID}
                        highestBid={Math.random() * 100}
                      />
                    </motion.div>
                  ))}
                </motion.div>
              </motion.div>
            )}
          </AnimatePresence>

          <h1 className="text-3xl font-semibold tracking-wide text-white">
            üî• Available for bidding
          </h1>

          <Grid
            items={auctions.data || []}
            renderItem={(auction) => (
              <AuctionCard
                key={auction.informationCID}
                title={auction.information.title}
                description={auction.information.description}
                informationCID={auction.informationCID}
                sellerAddress={auction.information.ownerAddress}
                sellerReputation={Math.random() * 10}
                highestBid={Math.random() * 100}
              />
            )}
          />
          <p className="text-2xl text-white">
            {auctions.data ? "" : "Loading tRPC query..."}
          </p>
        </div>
      </main>
    </>
  );
};

export default Home;
